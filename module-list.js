"use strict"

const fs = require("fs")
const p = require("path")
const header = `window.getModule = name => require(name)
// generated by 'npm run module-list'`

function readdir(path, ignores, callback) {
  if (typeof ignores == "function") {
    callback = ignores;
    ignores = [];
  }

  if (!callback) {
    return new Promise(function (resolve, reject) {
      readdir(path, ignores || [], function (err, data) {
        if (err) {
          reject(err);
        } else {
          resolve(data);
        }
      });
    });
  }

  var list = [];

  fs.readdir(path, function (err, files) {
    if (err) {
      return callback(err);
    }

    var pending = files.length;
    if (!pending) {
      // we are done, woop woop
      return callback(null, list);
    }

    files.forEach(function (file) {
      var filePath = p.join(path, file);
      fs.stat(filePath, function (_err, stats) {
        if (_err) {
          return callback(_err);
        }

        if (
          ignores.some(function (matcher) {
            return matcher(filePath, stats);
          })
        ) {
          pending -= 1;
          if (!pending) {
            return callback(null, list);
          }
          return null;
        }

        if (stats.isDirectory()) {
          readdir(filePath, ignores, function (__err, res) {
            if (__err) {
              return callback(__err);
            }

            list = list.concat(res);
            pending -= 1;
            if (!pending) {
              return callback(null, list);
            }
          });
        } else {
          list.push(filePath);
          pending -= 1;
          if (!pending) {
            return callback(null, list);
          }
        }
      });
    });
  });
}

function getMatches(string, regex, index) {
  index = index || 1 // default to the first capturing group
  var matches = []
  var match
  while ((match = regex.exec(string)))
    matches.push(match[index])
  return matches
}

readdir("src", (err, res) => {
  if (err) throw err
  let u = {}
  const mods = res.map(r => getMatches(fs.readFileSync(r).toString(), /window\.getModule\(["']([a-z0-9-]+)["']\)/gmi))
    .reduce((a, b) => a.concat(b), [])
    .filter(m => u[m] ? false : (u[m] = true)) //remove duplicates
  console.log("Module(s): " + mods.join(", "))
  fs.writeFileSync("src/bundle.js", Buffer.concat([Buffer.from(header), Buffer.from("\n"), Buffer.from(mods.map(r => 'require(' + JSON.stringify(r) + ')').concat([""]).join("\n"))]))
})
